# [START pyproject]
[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "florezcook"
version = "0.1.0"
description = "Sistema de GestiÃ³n de Restaurante"
readme = "README.md"
authors = [
    { name = "Tu Nombre", email = "tu@email.com" },
]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
requires-python = ">=3.9"
dependencies = [
    "Flask>=2.0.0",
    "Flask-SQLAlchemy>=2.5.0",
    "Flask-Migrate>=3.1.0",
    "Flask-Login>=0.5.0",
    "Flask-WTF>=1.0.0",
    "Flask-Mail>=0.9.1",
    "Flask-Babel>=2.0.0",
    "gunicorn>=20.1.0",
    "mysqlclient>=2.1.0",
    "python-dotenv>=0.19.0",
    "PyJWT>=2.3.0",
    "Werkzeug>=2.0.0",
    "email-validator>=1.1.3",
    "Pillow>=8.3.0",
    "requests>=2.26.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.5",
    "pytest-cov>=2.12.1",
    "black>=21.9b0",
    "flake8>=3.9.2",
    "isort>=5.9.3",
    "pre-commit>=2.15.0",
    "ipdb>=0.13.9",
    "mypy>=0.910",
    "pytest-mock>=3.6.1",
    "factory-boy>=3.2.0",
    "Faker>=8.14.0",
    "sphinx>=4.1.2",
    "sphinx-rtd-theme>=0.5.2",
    "sphinx-autodoc-typehints>=1.12.0",
]

[project.urls]
Homepage = "https://github.com/tuusuario/florezcook"
Documentation = "https://florezcook.readthedocs.io/"
Repository = "https://github.com/tuusuario/florezcook"
Changelog = "https://github.com/tuusuario/florezcook/releases"
Issues = "https://github.com/tuusuario/florezcook/issues"

[tool.setuptools]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v -s --cov=app --cov-report=term-missing"

[tool.coverage.run]
source = ["app"]
omit = [
    "**/tests/**",
    "**/__pycache__/**",
    "**/migrations/**",
    "**/venv/**",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "flask",
    "flask_sqlalchemy",
    "flask_migrate",
    "flask_login",
    "flask_wtf",
    "flask_mail",
    "flask_babel",
    "werkzeug",
    "sqlalchemy",
    "alembic",
    "wtforms",
    "email_validator",
    "PIL",
    "Pillow",
]
ignore_missing_imports = true

# [END pyproject]
