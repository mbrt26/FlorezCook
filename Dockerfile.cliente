# Dockerfile optimizado para FlorezCook - Portal de Clientes
FROM python:3.11-slim

LABEL maintainer="FlorezCook Team"
LABEL description="FlorezCook - Portal de Clientes"
LABEL version="2025.06.24"

# Variables de entorno
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=app_cliente.py
ENV FLASK_ENV=production
ENV PORT=8081

# Crear usuario no-root para seguridad
RUN groupadd -r florezcook && useradd -r -g florezcook florezcook

# Instalar dependencias del sistema en una sola capa (optimizado)
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    default-libmysqlclient-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Crear directorio de trabajo
WORKDIR /app

# Copiar solo requirements primero para aprovechar cache de Docker
COPY requirements.txt .

# Instalar dependencias Python (optimizado)
RUN pip install --no-cache-dir --upgrade pip==23.3.1 && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir gunicorn==21.2.0

# Copiar código de la aplicación
COPY . .

# Crear directorio para logs y establecer permisos
RUN mkdir -p /app/logs && chown -R florezcook:florezcook /app

# Cambiar al usuario no-root
USER florezcook

# Health check simple
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Exponer puerto
EXPOSE $PORT

# Comando optimizado
CMD ["gunicorn", "--bind", "0.0.0.0:8081", "--workers", "2", "--timeout", "60", "app_cliente:app"]